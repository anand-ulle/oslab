PRODUCER CONSUMER PROBLEM USING SEMAPHORES

To write a C-program to implement the producer – consumer problem using semaphores. 
ALGORITHM: 
Step 1: Start the program. 
Step 2: Declare the required variables. 
Step 3: Initialize the buffer size and get maximum item you want to produce. 
Step 4: Get the option, which you want to do either producer, consumer or exit from the 
operation. 
Step 5: If you select the producer, check the buffer size if it is full the producer should not 
produce the item or otherwise produce the item and increase the value buffer size. 
Step 6: If you select the consumer, check the buffer size if it is empty the consumer should not 
consume the item or otherwise consume the item and decrease the value of buffer size. 
Step 7: If you select exit come out of the program. 
Step 8: Stop the program.

To write a c program to implement IPC using shared memory.

ALGORITHM:
Step 1: Start the process
Step 2: Declare the segment size
Step 3: Create the shared memory
Step 4: Read the data from the shared memory
Step 5: Write the data to the shared memory
Step 6: Edit the data
Step 7: Stop the process

To write a C program to implement banker‟s algorithm for deadlock avoidance.

ALGORITHM:
Step-1: Start the program.
Step-2: Declare the memory for the process.
Step-3: Read the number of process, resources, allocation matrix and available matrix.
Step-4: Compare each and every process using the banker‟s algorithm. 
Step-5: If the process is in safe state then it is a not a deadlock process otherwise it is a deadlock process
Step-6: produce the result of state of process
Step-7: Stop the program

To write a C program to implement algorithm for deadlock detection.

ALGORITHM:
Step-1: Start the program.
Step-2: Declare the memory for the process.
Step-3: Read the number of process, resources, allocation matrix and available matrix.
Step-4: Compare each and every process using the banker‟s algorithm. 
Step-5: If the process is in safe state then it is a not a deadlock process otherwise it is a 
deadlock process
Step-6: produce the result of state of process
Step-7: Stop the program

To write a c program to implement Threading and Synchronization Applications.

ALGORITHM:
Step 1: Start the process
Step 2: Declare process thread, thread-id.
Step 3: Read the process thread and thread state.
Step 4: Check the process thread equals to thread-id by using if condition.
Step 5: Check the error state of the thread. 
Step 6: Display the completed thread process.
Step 7: Stop the process



